DKHASH=$(find . -type f \( -exec sha256sum "/usr/local/dklaxz"/{} \; \) | sha256sum)
DKHASH=$(sha256sum /usr/bin/dklaxz | cut -c 1-60)
DKTMPHASH=$(sha256sum /dklaxz | cut -c 1-60)

_check_dk_update(){

cd $DK_PREFIX
DKHASH=$(find . \( ! -regex '.*/\..*' \) -type f -print0 | xargs -0 sha1sum | sort -h | sha256sum | awk '{print $1}')



# download or update repo 
# if [[ ! -f "$DKTMP_PREFIX/dklaxz" ]]; then
# rm -rf $DKTMP_PREFIX || true
# git clone --quiet https://github.com/minlaxz/ml-in-docker.git $DKTMP_PREFIX && cd $_
# else
# cd $DKTMP_PREFIX
# git pull --quiet origin master
# fi

rm -rf $DKTMP_PREFIX || true
git clone --quiet $DK_REPO $DKTMP_PREFIX && cd $_
# now inside DKTMP_PREFIX
rm -rf .git Dockerfile.* LICENSE README.md deprecated examples-ipynb.txt laxz.bashrc .gitignore
# find . -type f -or -type d -not -name 'dklaxz*' -delete
DKTMPHASH=$(find . \( ! -regex '.*/\..*' \) -type f -print0 | xargs -0 sha1sum | sort -h | sha256sum | awk '{print $1}')

if [[ "$DKHASH" == "$DKTMPHASH" ]]; then
echo -e "\e[1;37m"
cat<<EOF
dklaxz up-to-date."
EOF
echo -e "\e[m"

else
echo -e "\e[1;31m"
cat<<EOF
dklaxz update available.
please consider running dklaxz --update
EOF
fi

echo -e "\e[2;32m"
cat<<EOF
"current hash : $DKHASH"
"lastest hash : $DKTMPHASH"
EOF
echo -e "\e[m"

#sha256sum -c SHA256SUMS 2>&1 | grep OK
}